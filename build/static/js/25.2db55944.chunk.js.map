{"version":3,"sources":["components/Modal/Modal.jsx","features/Settings/settings.js","features/Settings/components/ChangePassword.jsx","features/Settings/components/SettingsAccount.jsx"],"names":["useStyles","makeStyles","root","position","top","left","right","bottom","display","justifyContent","alignItems","backgroundColor","fontSize","modal","width","height","borderRadius","flexDirection","padding","text","margin","buttonGroup","border","opacity","color","cursor","delete","check","agree","disagree","Modal","typeIcon","onAgree","onDisagree","classes","className","div","animate","scale","transition","duration","onClick","require","server_name","token_prefix","updateTutorProfile","a","newTutorInfo","token","id","fetch","method","headers","Authorization","body","JSON","stringify","console","log","updateParentProfile","updateLink","newLink","getName","name","first_name","slice","indexOf","last_name","changePassword","oldPassword","newPassword","ChangePassword","onClose","onSubmit","useForm","register","errors","formState","handleSubmit","watch","newpassword","useRef","current","oldpassword","style","fontWeight","type","required","minLength","validate","value","renewpassword","SettingsAccount","props","userName","useSelector","selectUsername","email","selectEmail","useState","showChangePassword","setShowChangePassword","showLoading","setShowLoading","selectToken","showSuccessModal","setShowSuccessModal","showFailedModal","setShowFailedModal","handleChangePassword","response","disabled","defaultValue","Loading"],"mappings":"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","file":"static/js/25.2db55944.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { TiDeleteOutline, TiInfoOutline, TiInputChecked } from \"react-icons/ti\";\nimport { motion } from \"framer-motion\";\n\nModal.propTypes = {\n    text: PropTypes.string,\n    onAgree: PropTypes.func,\n    onDisagree: PropTypes.func,\n};\n\nfunction Modal({typeIcon, text, onAgree = null, onDisagree = null}) {\n    const classes = useStyles();\n    const handleAgree = () => {\n        onAgree();\n    }\n    const handleDisagree = () => {\n        onDisagree();\n    }\n    return (\n        <div className={classes.root}>\n            <motion.div animate={{ scale: 1.1 }}\n    transition={{ duration: 0.1 }} className={classes.modal}>\n                {typeIcon === 'delete' && <TiDeleteOutline className={classes.delete}/>}\n                {typeIcon === 'check' && <TiInputChecked className={classes.check}/>}\n                {typeIcon === 'fail' && <TiInfoOutline className={classes.delete}/>}\n                <p className={classes.text}>\n                    {text}\n                </p>\n                <div className={classes.buttonGroup}>\n                    {onAgree && <button className={classes.agree} onClick={handleAgree}>\n                        Tiếp tục\n                    </button>}\n                    {onDisagree && <button className={classes.disagree} onClick={handleDisagree}>\n                        Hủy\n                    </button>}\n                </div>\n            </motion.div>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(0,0,0,0.5)\", /* Black background with opacity */\n        \"z-index\": \"899\",\n        \"& svg\": {\n            fontSize: 80,\n        }\n    },\n    modal: {\n        width: \"308px\",\n        height: \"172px\",\n        backgroundColor: \"white\",\n        borderRadius: \"4px\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        padding: 8,\n    },\n    text: {\n        fontSize: \"16px\",\n        margin: 0,\n    },\n    buttonGroup: {\n        // display: \"flex\",\n        // position: 'absolute',\n        // right: \"12px\",\n        // bottom: \"12px\",\n        \"& button\": {\n            // backgroundColor: \"transparent\",\n            border: \"none\",\n            fontSize: \"16px\",\n            // color: \"#1976D2\",\n            opacity: \"0.6\",\n            margin: \"0 8px\",\n            padding: '4px 8px',\n            borderRadius: 4,\n            color: 'white',\n            \"&:hover\": {\n                cursor: \"pointer\",\n                opacity: \"1\",\n            }\n        }\n    },\n    delete: {\n        color: 'red',\n    },\n    check: {\n        color: '#00AA85',\n    }, \n    agree: {\n        backgroundColor: '#0061FF',\n    },\n    disagree: {\n        backgroundColor: '#AAAAAA',\n    }\n})\n\nexport default Modal;","const { server_name, token_prefix } = require(\"namespace\");\n\nexport const updateTutorProfile = async ({newTutorInfo, token, id}) => {\n    try {\n        await fetch(`${server_name}/findTutor/tutorDetail/${id}`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `${token_prefix} ${token}`,\n            },\n            body: JSON.stringify(newTutorInfo),\n        })\n        return true;\n    } catch (error) {\n        console.log(\"Failed to update tutor's profile: \", error);\n        return false;\n    }\n}\n\nexport const updateParentProfile = async ({newTutorInfo, token, id}) => {\n    try {\n        await fetch(`${server_name}/findTutor/parentDetail/${id}`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `${token_prefix} ${token}`,\n            },\n            body: JSON.stringify(newTutorInfo),\n        })\n        return true;\n    } catch (error) {\n        console.log(\"Failed to update parent's profile: \", error);\n        return false;\n    }\n}\n\nexport const updateLink = async ({ token, newLink}) => {\n    try {\n        await fetch(`${server_name}/auth/updateMultipleLink/`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `${token_prefix} ${token}`,\n            },\n            body: JSON.stringify(newLink),\n        })\n        return true;\n    } catch (error) {\n        console.log(\"Failed to update user's link: \", error);\n        return false;\n    }\n    \n} \n\nexport const getName = (name) => {\n    return {\n      first_name: name.slice(0, name.indexOf(' ')),\n      last_name: name.slice(name.indexOf(' ') + 1)\n    }\n}\n\nexport const changePassword = async ({token, oldPassword, newPassword}) => {\n    try {\n        await fetch(`${server_name}/auth/changePassword/`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `${token_prefix} ${token}`,\n            },\n            body: JSON.stringify({\n                \"old_password\": oldPassword,\n                \"new_password\": newPassword,\n            }),\n        })\n        return true;\n    } catch (error) {\n        console.log(\"Failed to change password: \", error);\n        return false;\n    }\n}\n","import React from 'react';\nimport { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { RiLockPasswordFill } from 'react-icons/ri';\n\nChangePassword.propTypes = {\n    \n};\n\nfunction ChangePassword({onClose, onSubmit}) {\n    const {register, formState: { errors }, handleSubmit, watch} = useForm();\n    const newpassword = useRef({});\n    newpassword.current = watch(\"newpassword\", \"\");\n\n    const handleChangePassword = ({oldpassword, newpassword}) => {\n        if(!onSubmit) return;\n        onSubmit({\n            oldPassword: oldpassword,\n            newPassword: newpassword,\n        })\n    }\n    \n    return (\n        <div className=\"settings__password\">\n            <div className=\"settings__overlay\" onClick={() => onClose()}></div>\n                <form className=\"settings__password__main\" onSubmit={handleSubmit(handleChangePassword)}>\n                    <AiFillCloseCircle className=\"settings__close\" onClick={() => onClose()} />\n                    <label style={{fontWeight: 700}}>Đổi mật khẩu <RiLockPasswordFill /></label>\n                    <div style={{padding: \"12px 16px\"}}>\n                    <div className=\"settings__field\" style={{width: 240}}>\n                        <label>Mật khẩu cũ</label>\n                        <input type=\"password\" {...register(\"oldpassword\", { required: true, minLength: 6})}/>\n                        \n                        {errors.oldpassword && \n                            <span className=\"settings__field__error\">Mật khẩu cần ít nhất 6 kí tự</span>}    \n                    </div>\n                    <div className=\"settings__field\">\n                        <label>Mật khẩu mới</label>\n                        <input type=\"password\" {...register(\"newpassword\", { required: true, minLength: 6})}/>\n                        {errors.newpassword && \n                            <span className=\"settings__field__error\">Mật khẩu mới cần ít nhất 6 kí tự</span>}    \n                    </div>\n                    <div className=\"settings__field\">\n                        <label>Nhập lại mật khẩu</label>\n                        <input type=\"password\" \n                            {...register(\"renewpassword\", {\n                                validate: value =>\n                                value === newpassword.current || \"The passwords do not match\"\n                        })}\n                        />\n                        \n                        {errors.renewpassword && \n                            <span className=\"settings__field__error\">Mật khẩu không trùng khớp</span>}\n                    </div>\n                    <button type=\"submit\">Lưu</button>\n                    </div>\n                </form>\n        </div>\n    );\n}\n\nexport default ChangePassword;","import Loading from 'components/Loading/Loading';\nimport Modal from 'components/Modal/Modal';\nimport { selectEmail, selectToken, selectUsername } from 'features/auth/authSlice';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { changePassword } from '../settings';\nimport ChangePassword from './ChangePassword';\n\nfunction SettingsAccount(props) {\n    const userName = useSelector(selectUsername);\n    const email = useSelector(selectEmail);\n    const [showChangePassword, setShowChangePassword] = useState(false);\n    const [showLoading, setShowLoading] = useState(false);\n    const token = useSelector(selectToken);\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\n    const [showFailedModal, setShowFailedModal] = useState(false);\n\n    const handleChangePassword = async ({oldPassword, newPassword}) => {\n        setShowLoading(true);\n        const response = await changePassword({\n            token: token,\n            oldPassword: oldPassword,\n            newPassword: newPassword,\n        })\n        setShowLoading(false);\n        if(response) {\n            setShowSuccessModal(true);\n        } else {\n            setShowFailedModal(true);\n        }\n    }\n\n    return (\n        <div className=\"settings__account\">\n            <div className=\"settings__field\">\n                <label>Tên tài khoản</label>\n                <input type=\"text\" disabled defaultValue={userName}/>\n            </div>\n            <div className=\"settings__field\">\n                <label>Email</label>\n                <input type=\"text\" disabled defaultValue={email}/>\n            </div>\n            <div className=\"settings__field\">\n                <label>Mật khẩu</label>\n                <button onClick={() => setShowChangePassword(true)}>Đổi mật khẩu</button>\n            </div>\n            {showChangePassword && <ChangePassword onClose={()=>setShowChangePassword(false)} onSubmit={handleChangePassword}/>}\n            {showLoading && <Loading />}\n            {showSuccessModal && <Modal typeIcon=\"check\" text=\"Đổi mật khẩu thành công\" onAgree={() => {setShowChangePassword(false);setShowSuccessModal(false)}}/>}\n            {showFailedModal && <Modal typeIcon=\"fail\" text=\"Đổi mật khẩu không thành công\" onAgree={() => setShowFailedModal(false)} />}\n        </div>\n    );\n}\n\nexport default SettingsAccount;"],"sourceRoot":""}